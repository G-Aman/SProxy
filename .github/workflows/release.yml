name: Release

on:
  push:
    branches:
      - main
      - master

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Get version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Install packages
        run: pnpm install --frozen-lockfile

      - name: Build for cloudflare
        run: pnpm build:cloudflare && cp ./.output/server/index.mjs ./cloudflare.worker.mjs

      - name: Build for AWS
        run: pnpm build:aws && cd .output/server && zip -r ../../lambda.zip .

      - name: Build for Node
        run: pnpm build:node && cd .output/server && zip -r ../../nodejs.zip .

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.package-version.outputs.current-version }}" \
            --title "iProxy v${{ steps.package-version.outputs.current-version }}" \
            --notes "Instead of downloading a package, you can also run it in docker: \`docker run ghcr.io/G-Aman/iProxy:${{ steps.package-version.outputs.current-version }}\`" \
            ./cloudflare.worker.mjs \
            ./lambda.zip \
            ./nodejs.zip
